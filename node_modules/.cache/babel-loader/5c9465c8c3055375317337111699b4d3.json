{"ast":null,"code":"var _jsxFileName = \"F:\\\\Guvi Files\\\\Hackethon\\\\Rental\\\\client\\\\src\\\\Components\\\\Signup.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from \"react\";\n// import { Form, Button } from \"react-bootstrap\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// function Signup() {\n//   let navigate = useNavigate();\n//   let [firstname, setFirstName] = useState(\"\");\n//   let [lastname, setLastName] = useState(\"\");\n//   let [mobile, setMobile] = useState(\"\");\n//   let [email, setEmail] = useState(\"\");\n//   let [password, setPassword] = useState(\"\");\n//   let [confirmpassword, setConfirmPassword] = useState(\"\");\n//   let role = 2;\n//   let [passwordmatch, setMatch] = useState(\"\");\n//   useEffect(() => {\n//     if (password == confirmpassword) {\n//       setMatch(false);\n//     } else {\n//       setMatch(true);\n//     }\n//   });\n//   let handleSubmit = async () => {\n//     let res = await axios.post(\"http://localhost:4000/users/signup\", {\n//       firstname,\n//       lastname,\n//       mobile,\n//       email,\n//       password,\n//       role,\n//     });\n//     if (res.data.statusCode === 200) {\n//       navigate(\"/login\");\n//     }\n//   };\n//   return (\n//     <div>\n//       <h1 className=\"text-center mt-4\">SignUp Here</h1>\n//       <Form style={{ width: \"30%\" }} className=\"m-auto mt-3\">\n//         <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n//           <Form.Label>First Name</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Enter First Name\"\n//             required\n//             onChange={(e) => {\n//               setFirstName(e.target.value);\n//             }}\n//           />\n//         </Form.Group>\n//         <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n//           <Form.Label>Last Name</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Enter Last Name\"\n//             required\n//             onChange={(e) => {\n//               setLastName(e.target.value);\n//             }}\n//           />\n//         </Form.Group>\n//         <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n//           <Form.Label>Mobile</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Enter Mobile\"\n//             required\n//             onChange={(e) => {\n//               setMobile(e.target.value);\n//             }}\n//           />\n//         </Form.Group>\n//         <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n//           <Form.Label>Email address</Form.Label>\n//           <Form.Control\n//             type=\"email\"\n//             placeholder=\"Enter Email\"\n//             required\n//             onChange={(e) => {\n//               setEmail(e.target.value);\n//             }}\n//           />\n//         </Form.Group>\n//         <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n//           <Form.Label>Password</Form.Label>\n//           <Form.Control\n//             type=\"password\"\n//             placeholder=\"Enter Password\"\n//             required\n//             onChange={(e) => {\n//               setPassword(e.target.value);\n//             }}\n//           />\n//         </Form.Group>\n//         <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n//           <Form.Label>Confrim Password</Form.Label>\n//           <Form.Control\n//             type=\"password\"\n//             placeholder=\"Enter Confirm Password\"\n//             required\n//             onChange={(e) => {\n//               setConfirmPassword(e.target.value);\n//               if (password === confirmpassword) {\n//               }\n//             }}\n//           />\n//         </Form.Group>\n//         <Button\n//           variant=\"primary\"\n//           type=\"submit\"\n//           className=\"d-flex m-auto\"\n//           onClick={() => {\n//             handleSubmit();\n//           }}\n//         >\n//           Submit\n//         </Button>\n//         {passwordmatch ? (\n//           <div className=\"text-center mt-4\" style={{ color: \"red\" }}>\n//             Password Must Be Match!\n//           </div>\n//         ) : (\n//           <></>\n//         )}\n//       </Form>\n//       <div className=\"d-flex justify-content-center mt-4\">\n//         <span className=\"text-center\">Already have an account &nbsp;?</span>\n//         &nbsp;\n//         <a href=\"/login\">Login</a>\n//       </div>\n//     </div>\n//   );\n// }\n// export default Signup;\nimport React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SignUp() {\n  _s();\n\n  let navigate = useNavigate();\n  let [firstName, setFirstName] = useState(\"\");\n  let [lastName, setLastName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [mobile, setMobile] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [confirmPassword, setConfirmPassword] = useState(\"\");\n  let role = 2;\n  let [passwordMatch, setMatch] = useState(\"\");\n  useEffect(() => {\n    if (password === confirmPassword) setMatch(false);else setMatch(true);\n  });\n\n  let handleSubmit = async () => {\n    let res = await axios.post(\"http://localhost:4000/users/signup\", {\n      firstName,\n      lastName,\n      email,\n      mobile,\n      password,\n      role\n    });\n    console.log(res);\n\n    if (res.data.statusCode === 200) {\n      navigate(\"/login\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        paddingTop: \"5px\"\n      },\n      children: \"SignUp It's free\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter First Name\",\n          onChange: e => {\n            setFirstName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Last Name\",\n          onChange: e => {\n            setLastName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          onChange: e => {\n            setEmail(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"We'll never share your email with anyone else.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Mobile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Mobile Number\",\n          onChange: e => {\n            setMobile(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: e => {\n            setPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          onChange: e => {\n            setConfirmPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => handleSubmit(),\n          children: \"SignUp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), passwordMatch ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Password Should Match!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"Nkg6aUwTdSrSqzAy6F64KxXNl/o=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["F:/Guvi Files/Hackethon/Rental/client/src/Components/Signup.js"],"names":["React","useState","useEffect","Form","Button","axios","useNavigate","SignUp","navigate","firstName","setFirstName","lastName","setLastName","email","setEmail","mobile","setMobile","password","setPassword","confirmPassword","setConfirmPassword","role","passwordMatch","setMatch","handleSubmit","res","post","console","log","data","statusCode","textAlign","paddingTop","e","target","value","color"],"mappings":";;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;;AACA,SAASC,MAAT,GAAkB;AAAA;;AAChB,MAAIC,QAAQ,GAAGF,WAAW,EAA1B;AACA,MAAI,CAACG,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAI,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAI,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CA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","sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { Form, Button } from \"react-bootstrap\";\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// function Signup() {\r\n//   let navigate = useNavigate();\r\n//   let [firstname, setFirstName] = useState(\"\");\r\n//   let [lastname, setLastName] = useState(\"\");\r\n//   let [mobile, setMobile] = useState(\"\");\r\n//   let [email, setEmail] = useState(\"\");\r\n//   let [password, setPassword] = useState(\"\");\r\n//   let [confirmpassword, setConfirmPassword] = useState(\"\");\r\n//   let role = 2;\r\n\r\n//   let [passwordmatch, setMatch] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     if (password == confirmpassword) {\r\n//       setMatch(false);\r\n//     } else {\r\n//       setMatch(true);\r\n//     }\r\n//   });\r\n\r\n//   let handleSubmit = async () => {\r\n//     let res = await axios.post(\"http://localhost:4000/users/signup\", {\r\n//       firstname,\r\n//       lastname,\r\n//       mobile,\r\n//       email,\r\n//       password,\r\n//       role,\r\n//     });\r\n//     if (res.data.statusCode === 200) {\r\n//       navigate(\"/login\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1 className=\"text-center mt-4\">SignUp Here</h1>\r\n//       <Form style={{ width: \"30%\" }} className=\"m-auto mt-3\">\r\n//         <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n//           <Form.Label>First Name</Form.Label>\r\n//           <Form.Control\r\n//             type=\"text\"\r\n//             placeholder=\"Enter First Name\"\r\n//             required\r\n//             onChange={(e) => {\r\n//               setFirstName(e.target.value);\r\n//             }}\r\n//           />\r\n//         </Form.Group>\r\n//         <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n//           <Form.Label>Last Name</Form.Label>\r\n//           <Form.Control\r\n//             type=\"text\"\r\n//             placeholder=\"Enter Last Name\"\r\n//             required\r\n//             onChange={(e) => {\r\n//               setLastName(e.target.value);\r\n//             }}\r\n//           />\r\n//         </Form.Group>\r\n//         <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n//           <Form.Label>Mobile</Form.Label>\r\n//           <Form.Control\r\n//             type=\"text\"\r\n//             placeholder=\"Enter Mobile\"\r\n//             required\r\n//             onChange={(e) => {\r\n//               setMobile(e.target.value);\r\n//             }}\r\n//           />\r\n//         </Form.Group>\r\n//         <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n//           <Form.Label>Email address</Form.Label>\r\n//           <Form.Control\r\n//             type=\"email\"\r\n//             placeholder=\"Enter Email\"\r\n//             required\r\n//             onChange={(e) => {\r\n//               setEmail(e.target.value);\r\n//             }}\r\n//           />\r\n//         </Form.Group>\r\n//         <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n//           <Form.Label>Password</Form.Label>\r\n//           <Form.Control\r\n//             type=\"password\"\r\n//             placeholder=\"Enter Password\"\r\n//             required\r\n//             onChange={(e) => {\r\n//               setPassword(e.target.value);\r\n//             }}\r\n//           />\r\n//         </Form.Group>\r\n//         <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n//           <Form.Label>Confrim Password</Form.Label>\r\n//           <Form.Control\r\n//             type=\"password\"\r\n//             placeholder=\"Enter Confirm Password\"\r\n//             required\r\n//             onChange={(e) => {\r\n//               setConfirmPassword(e.target.value);\r\n//               if (password === confirmpassword) {\r\n//               }\r\n//             }}\r\n//           />\r\n//         </Form.Group>\r\n//         <Button\r\n//           variant=\"primary\"\r\n//           type=\"submit\"\r\n//           className=\"d-flex m-auto\"\r\n//           onClick={() => {\r\n//             handleSubmit();\r\n//           }}\r\n//         >\r\n//           Submit\r\n//         </Button>\r\n//         {passwordmatch ? (\r\n//           <div className=\"text-center mt-4\" style={{ color: \"red\" }}>\r\n//             Password Must Be Match!\r\n//           </div>\r\n//         ) : (\r\n//           <></>\r\n//         )}\r\n//       </Form>\r\n//       <div className=\"d-flex justify-content-center mt-4\">\r\n//         <span className=\"text-center\">Already have an account &nbsp;?</span>\r\n//         &nbsp;\r\n//         <a href=\"/login\">Login</a>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Signup;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nfunction SignUp() {\r\n  let navigate = useNavigate();\r\n  let [firstName, setFirstName] = useState(\"\");\r\n  let [lastName, setLastName] = useState(\"\");\r\n  let [email, setEmail] = useState(\"\");\r\n  let [mobile, setMobile] = useState(\"\");\r\n  let [password, setPassword] = useState(\"\");\r\n  let [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  let role = 2;\r\n  let [passwordMatch, setMatch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (password === confirmPassword) setMatch(false);\r\n    else setMatch(true);\r\n  });\r\n\r\n  let handleSubmit = async () => {\r\n    let res = await axios.post(\"http://localhost:4000/users/signup\", {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      mobile,\r\n      password,\r\n      role,\r\n    });\r\n    console.log(res);\r\n    if (res.data.statusCode === 200) {\r\n      navigate(\"/login\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <h2 style={{ textAlign: \"center\", paddingTop: \"5px\" }}>\r\n        SignUp It's free\r\n      </h2>\r\n      <Form>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>First Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter First Name\"\r\n            onChange={(e) => {\r\n              setFirstName(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Last Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Last Name\"\r\n            onChange={(e) => {\r\n              setLastName(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Mobile</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Mobile Number\"\r\n            onChange={(e) => {\r\n              setMobile(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={(e) => {\r\n              setPassword(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            onChange={(e) => {\r\n              setConfirmPassword(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <Button variant=\"primary\" onClick={() => handleSubmit()}>\r\n            SignUp\r\n          </Button>\r\n          {passwordMatch ? (\r\n            <div style={{ color: \"red\" }}>Password Should Match!</div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}